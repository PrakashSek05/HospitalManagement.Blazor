@using HospitalManagement.Blazor.Services
@inject ToastService Toasts

<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1080;">
    @foreach (var t in _toasts)
    {
        <div class="toast show mb-2 border rounded shadow-sm">
            <div class="toast-header">
                <strong class="me-auto">@t.Title</strong>
                <small>@DateTime.Now.ToShortTimeString()</small>
                <button type="button" class="btn-close ms-2 mb-1" @onclick="(() => Close(t))"></button>
            </div>
            <div class="toast-body">
                @t.Message
            </div>
        </div>
    }
</div>

@code {
    private readonly List<ToastMessage> _toasts = new();

    protected override void OnInitialized()
    {     
        Toasts.OnShow += HandleShow;
    }

    private void HandleShow(ToastMessage msg)
    {        
        InvokeAsync(async () =>
        {
            _toasts.Add(msg);
            StateHasChanged();

            
            try
            {
                await Task.Delay(msg.TimeoutMs);
                _toasts.Remove(msg);
                StateHasChanged();
            }
            catch
            {
                
            }
        });
    }

    private void Close(ToastMessage msg)
    {
        _toasts.Remove(msg);
        StateHasChanged();
    }

    public void Dispose()
    {
        Toasts.OnShow -= HandleShow;
    }
}
